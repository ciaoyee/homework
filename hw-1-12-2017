Absolute v. Relative Paths
The commands 5, 7, 8, & 9 are useable to navigate to Amanda's home directory /Users/amanda from /Users/amanda/data.
5. cd ~ 
	possible b/c the ~ represents the user's home directory (which would be /Users/amanda) so 
	it would go straight to there
7. cd ~/data/..
	possible b/c it has the ~ and also indicates that we want to go back from /data
	*complicated*
8. cd
	possible b/c it's the shortcut to go to the user's home directory
9. cd ..
	possible b/c it goes back one level (like from /Users/amanda/data to /Users/amanda)

The commands 1, 2, 3, 4, & 6 would not work.
1. cd .
	not possible b/c . stands for current directory
2. cd /
	/ stands for root directory
3. cd /home/amanda
	Amanda's home directory is /Users/amanda not /home/amanda
4. cd ../..
	goes back TWO levels 
6. cd home
	would end up bringing us to a directory home in the current directory (if it exists there)

Relative Path Resolution
If pwd displays /Users/thing, what will ls ../backup display?

It will display ->      original pnas_final pnas_sub

Won't display
1. b/c there is a directory backup in /Users
2. b/c .. indicates one level up, so it would not be the one in thing
3. b/c .. indicates one level up & didn't ask for -F to show / at the end of file names

ls Reading Comprehension
Will display pnas_sub/ pnas_final/ original/
2. ls -r -F
	ls w/o the directory arguments will list files & directories in current directory
3. ls -r -F /Users/backup
	uses the absolute path *explicitly*
4. 2 & 3

Will not display 
1. ls pwd  ->   pwd isn't the name of a directory






